[{"F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\index.js":"1","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\reportWebVitals.js":"2","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\App.js":"3","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\post\\Post.js":"4","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\post\\posts\\Posts.js":"5","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\header\\Header.js":"6","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\store\\actions\\CRUD.js":"7","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\store\\actions\\Action_types.js":"8","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\store\\reducers\\CRUDReducer.js":"9","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\admin\\admin.js":"10","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\admin\\CreatePost.js":"11","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\post\\singlePost\\SinglePost.js":"12","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\login\\Login.js":"13","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\store\\actions\\Auth.js":"14","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\store\\reducers\\AuthReducer.js":"15","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\registration\\Registration.js":"16","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\admin\\UpdatePost.js":"17","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\admin\\deletePost.js":"18","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\admin\\DeletePost.js":"19","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\searchitems\\SearchItems.js":"20","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\PrivateRoute.js":"21"},{"size":1277,"mtime":1608567427667,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":1211,"mtime":1608892898975,"results":"25","hashOfConfig":"23"},{"size":830,"mtime":1608790332095,"results":"26","hashOfConfig":"23"},{"size":1992,"mtime":1608554071560,"results":"27","hashOfConfig":"23"},{"size":4220,"mtime":1608879681434,"results":"28","hashOfConfig":"23"},{"size":2121,"mtime":1609703233942,"results":"29","hashOfConfig":"23"},{"size":492,"mtime":1608791320335,"results":"30","hashOfConfig":"23"},{"size":832,"mtime":1608553200332,"results":"31","hashOfConfig":"23"},{"size":4325,"mtime":1608875338864,"results":"32","hashOfConfig":"23"},{"size":3781,"mtime":1609704339770,"results":"33","hashOfConfig":"23"},{"size":1564,"mtime":1609704472560,"results":"34","hashOfConfig":"23"},{"size":4360,"mtime":1608801451880,"results":"35","hashOfConfig":"23"},{"size":1623,"mtime":1608792685192,"results":"36","hashOfConfig":"23"},{"size":1355,"mtime":1608791354757,"results":"37","hashOfConfig":"23"},{"size":3722,"mtime":1608801709701,"results":"38","hashOfConfig":"23"},{"size":4893,"mtime":1608874106205,"results":"39","hashOfConfig":"23"},{"size":2435,"mtime":1608875583848,"results":"40","hashOfConfig":"23"},{"size":2435,"mtime":1608875583848,"results":"41","hashOfConfig":"23"},{"size":2944,"mtime":1608885644216,"results":"42","hashOfConfig":"23"},{"size":442,"mtime":1608893351581,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"6y46as",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"46"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\index.js",[],["98","99"],"F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\reportWebVitals.js",[],"F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\App.js",["100","101","102"],"\nimport './App.css';\nimport Post from './component/post/Post'\nimport AdminTable from './component/admin/admin'\nimport Singlepost from './component/post/singlePost/SinglePost'\nimport SearchItems from './component/searchitems/SearchItems'\nimport Login from './component/login/Login'\nimport Registration from './component/registration/Registration'\nimport Header from './component/header/Header'\nimport {BrowserRouter as Router, Route, Switch, useHistory} from 'react-router-dom'\nimport PrivateRoute from './PrivateRoute'\n\nfunction App(props) {\n  const history = useHistory();\n  const token = localStorage.getItem('refresh_token')\n  function push(){\n    history.push('/login')\n  }\n  return (\n    <Router>\n    <div>\n      <Header />\n      <switch>\n      \n     \n      <Route exact path=\"/\" component={Post} />\n      <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/registration\" component={Registration} />\n      <PrivateRoute path=\"/admin\" component={AdminTable} />\n      <Route exact path=\"/retrive/:id\" component={Singlepost} />\n      <Route exact path=\"/search\" component={SearchItems} />\n     \n    \n      \n      \n      </switch>\n\n\n\n\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\post\\Post.js",["103","104"],"import React,{useState,useEffect} from 'react'\r\nimport Posts from './posts/Posts'\r\nimport {connect} from 'react-redux'\r\nimport {FetchData} from '../../store/actions/CRUD'\r\n\r\nfunction Post(props) {\r\n    \r\n    useEffect(() =>{\r\n        props.fetchDataa()\r\n    },[])\r\n\r\n    let post = <h2>Wait to load the data</h2>\r\n    if(props.post){\r\n        post =( props.post.map(data =><Posts post={data}/> ) )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 style={{textAlign:\"center\"}}>Latest Posts</h1><br/>\r\n           {post}    \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    post:state.crud.post,\r\n    token:state.auth.refresh_token\r\n})\r\n\r\n\r\nconst mapStateToDispatch = dispatch =>({\r\n    fetchDataa : () => dispatch(FetchData()),\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapStateToDispatch)(Post)\r\n","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\post\\posts\\Posts.js",[],"F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\header\\Header.js",[],"F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\store\\actions\\CRUD.js",["105"],"F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\store\\actions\\Action_types.js",[],"F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\store\\reducers\\CRUDReducer.js",["106","107"],"import React,{useState} from 'react'\r\nimport {FETCH_DATA, ERROR, RETRIVE_DATA} from '../actions/Action_types'\r\n\r\nconst initialState =({\r\n    post: [],\r\n    loading:false,\r\n    error:null,\r\n    singelPost:null\r\n\r\n})\r\n\r\nconst getUserPost = (state, action) =>({\r\n    ...state,\r\n    post:action.data\r\n\r\n})\r\n\r\nconst HandleError = (state, action) =>({\r\n    ...state,\r\n    error:action.data\r\n\r\n})\r\n\r\nconst getRetriveData = (state, action) =>({\r\n    ...state,\r\n    singelPost:action.data\r\n\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst CrudReducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case FETCH_DATA: return getUserPost(state, action)\r\n        case ERROR : return HandleError(state, action)\r\n        case RETRIVE_DATA : return getRetriveData(state, action)\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default CrudReducer;","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\admin\\admin.js",["108","109","110","111","112","113"],"import React,{useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport CreatePost from './CreatePost'\r\nimport UpdatePost from './UpdatePost'\r\nimport DeletePost from './DeletePost'\r\nimport Link from '@material-ui/core/Link';\r\nimport {NavLink, Route} from 'react-router-dom'\r\n\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {connect} from 'react-redux'\r\nimport {DeleteData, FetchData, UpdateData} from '../../store/actions/CRUD'\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\n function AdminTable(props) {\r\n\r\n  const classes = useStyles();\r\n  const [openUpdate, setOpenUpdate]  = useState(false)\r\n  const [data, setData] = useState({\r\n    post:null\r\n  })\r\n  \r\n  const [openCreate, setOpenCreate] = React.useState(false);\r\n  \r\n  useEffect(() => {\r\n    props.featchdatas()\r\n    \r\n  }, [])\r\n\r\n    const handleCreateOpen = () => {\r\n      setOpenCreate(!openCreate);\r\n    };\r\n\r\n    const handleUpdateOpen = () => {\r\n      setOpenUpdate(!openUpdate);\r\n    };\r\n\r\n\r\n \r\n  \r\n \r\n\r\n  return (\r\n    <Container maxWidth=\"md\" component=\"main\">\r\n    <h1>Admin Panal</h1><br/>\r\n\r\n    \r\n    <Button  variant=\"outlined\" color=\"primary\" onClick={handleCreateOpen}>\r\n       Create a New Post\r\n    </Button><br/><br/>\r\n    <TableContainer component={Paper}>\r\n        \r\n      <Table stickyHeader className={classes.table} aria-label=\"sticky table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>ID </TableCell>\r\n            <TableCell align=\"left\">Catagory</TableCell>\r\n            <TableCell align=\"left\">title</TableCell>\r\n            <TableCell align=\"right\">action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.post &&\r\n          props.post.map((row) => (\r\n           \r\n            <TableRow>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.id}\r\n              </TableCell>\r\n              <TableCell >{row.Category}</TableCell>\r\n              <TableCell align=\"left\">\r\n                <Link component={NavLink}\r\n                        color=\"textprimary\"\r\n                        to={\"/retrive/\"+row.id}\r\n                        underline=\"none\">\r\n                {row.title.trim(0,5)}\r\n                </Link>\r\n                </TableCell>\r\n              <TableCell align=\"right\">\r\n               <Link component={NavLink}\r\n                        color=\"textprimary\"\r\n                        to={\"/admin/update/\"+row.id}\r\n                        underline=\"none\"> \r\n                <CreateIcon  style={{cursor:'pointer', marginRight:\"10px\"}} />\r\n                 </Link> \r\n                 <Link component={NavLink}\r\n                        color=\"textprimary\"\r\n                        to={\"/admin/delete/\"+row.id}\r\n                        underline=\"none\"> \r\n                 <DeleteIcon style={{cursor:'pointer'}} />\r\n                 </Link>\r\n            \r\n                </TableCell>\r\n            </TableRow>\r\n            \r\n            \r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n\r\n\r\n\r\n    {/* <Button variant=\"outlined\" color=\"primary\" onClick={createpost}>\r\n        create\r\n    </Button> */}\r\n\r\n\r\n\r\n    \r\n<CreatePost onCreateForm={openCreate} onClose={handleCreateOpen}/>\r\n<Route exect path=\"/admin/update/:id\" component={UpdatePost} />\r\n<Route exect path=\"/admin/delete/:id\" component={DeletePost} />\r\n{/* {openUpdate ? <UpdatePost id =\"35\" onOpen={openUpdate} onClose={handleUpdateOpen}/> : \"\" } */}\r\n\r\n \r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n     post : state.crud.post\r\n\r\n})\r\n\r\n\r\nconst mapStateToDispatch = dispatch =>({\r\n    featchdatas : () => dispatch(FetchData())\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapStateToDispatch)(AdminTable)","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\admin\\CreatePost.js",["114","115","116"],"F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\post\\singlePost\\SinglePost.js",["117","118"],"F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\login\\Login.js",["119","120"],"import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {NavLink, useHistory} from 'react-router-dom'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {connect} from 'react-redux'\r\nimport {UserLogin} from '../../store/actions/Auth'\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login(props) {\r\n\r\n    let successFullRegistration=null\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [FormData, setFormData] = useState({\r\n            email:'',\r\n            password:''\r\n    })\r\n\r\n    const handleChange =  (e) =>{\r\n        setFormData(prevdata => ({\r\n            ...prevdata,\r\n            [e.target.name]:e.target.value.trim()\r\n        }))\r\n    }\r\n\r\n    async function goToHome (){\r\n        await new Promise((resolve) => setTimeout(() => { \r\n            const refresh_token = localStorage.getItem('refresh_token') \r\n            if(refresh_token){\r\n                history.push('/')\r\n            }\r\n          \r\n        }, 1000))\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n       \r\n        props.onLogin(FormData.email, FormData.password)\r\n        goToHome()\r\n        \r\n        \r\n    }\r\n \r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n         \r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"Email\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n              <TextField\r\n              onChange={handleChange}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            \r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleSubmit}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <NavLink to=\"/registration\" variant=\"body2\">\r\n                Create an account\r\n              </NavLink>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n     \r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    access_token:state.auth.access_token,\r\n    refresh_token:state.auth.refresh_token,\r\n    \r\n})\r\n\r\nconst mapStateToDispatch = dispatch =>({\r\n    onLogin : (email, password) => dispatch(UserLogin(email, password)) \r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapStateToDispatch)(Login)","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\store\\actions\\Auth.js",["121","122"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport {AUTH_START, AUTH_SUCCESS, AUTH_LOGOUT,ERROR, AUTH_FAIL, AUTH_REGISTRATION} from './Action_types'\r\n\r\n\r\nexport const auth_start = () =>({\r\n    \r\n        type:AUTH_START\r\n    \r\n})\r\n\r\nexport const auth_success = (token) =>({\r\n    \r\n        type:AUTH_SUCCESS,\r\n        access:token.access,\r\n        refresh:token.refresh\r\n        \r\n    \r\n})\r\n\r\nexport const auth_logout = () =>(\r\n    localStorage.removeItem('access_token'),\r\n    localStorage.removeItem('refresh_token'),\r\n    {\r\n        type:AUTH_LOGOUT\r\n    }\r\n)\r\nexport const auth_fail = (error) =>({\r\n    \r\n        type:AUTH_FAIL,\r\n        error:ERROR\r\n    \r\n})\r\n\r\nexport const UserLogin = (email, password) => async dispatch =>{\r\n    \r\n    try{\r\n        dispatch(auth_start())\r\n        await axios.post('http://127.0.0.1:8000/api/token/',{email, password}).then(res =>{\r\n\r\n            localStorage.setItem('access_token', res.data.access)\r\n            localStorage.setItem('refresh_token', res.data.refresh)\r\n            dispatch(auth_success(res.data))\r\n        })\r\n    }catch(error){\r\n        \r\n        dispatch(auth_fail(error))\r\n    }\r\n}\r\n\r\nexport const UserRegistration = (email,user_name,password) => async dispatch =>{\r\n    console.log(email,user_name,password)\r\n    try{\r\n        dispatch(auth_start())\r\n        await axios.post('http://127.0.0.1:8000/api/user/register/',{email,user_name,password}).then(res =>{\r\n\r\n            dispatch({\r\n                type:AUTH_REGISTRATION\r\n            })\r\n            \r\n        })\r\n    }catch(error){\r\n        \r\n        dispatch(auth_fail(error))\r\n    }\r\n}\r\n\r\n\r\n\r\n","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\store\\reducers\\AuthReducer.js",["123","124"],"import React, {useState} from 'react'\r\nimport {AUTH_START, AUTH_SUCCESS, AUTH_LOGOUT, AUTH_FAIL, AUTH_REGISTRATION} from '../actions/Action_types'\r\n\r\n\r\nconst initialState =({\r\n    access_token:localStorage.getItem('access_token'),\r\n    refresh_token:localStorage.getItem('refresh_token'),\r\n    loading: false,\r\n    error:null,\r\n    registration:false\r\n})\r\n\r\nconst authStart = (state, action) =>({\r\n    ...state,\r\n    loading:true\r\n})\r\n\r\nconst authSucces = (state, action) =>({\r\n    ...state,\r\n    access_token: action.acess,\r\n    refresh_token: action.refresh,\r\n    loading:false\r\n\r\n})\r\n\r\nconst authFailed = (state, action) =>({\r\n    ...state,\r\n    error:action.error,\r\n    loading:false\r\n\r\n})\r\nconst authLogout = (state, action) =>({\r\n    ...state,\r\n    access_token:null,\r\n    refresh_token:null\r\n})\r\nconst authRegistration = (state, action) =>({\r\n    ...state,\r\n    registration:true\r\n})\r\n\r\n\r\nconst AuthReducer = (state=initialState, action) =>{\r\n    switch(action.type){\r\n        case AUTH_START: return authStart(state, action)\r\n        case AUTH_SUCCESS: return authSucces(state, action)\r\n        case AUTH_FAIL: return authFailed(state, action)\r\n        case AUTH_REGISTRATION: return authRegistration(state, action)\r\n        case AUTH_LOGOUT: return authLogout(state, action)\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default AuthReducer;","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\registration\\Registration.js",["125","126"],"import React, {useState} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useHistory} from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link';\r\nimport {NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {UserRegistration} from '../../store/actions/Auth'\r\n\r\nfunction Registration(props) {\r\n\r\n    const history = useHistory();\r\n    let error=null\r\n    const [FormData, setInitalFormData] = useState({\r\n            email:'',\r\n            user_name:'',\r\n            password:''\r\n    })\r\n\r\n    const handleChange =  (e) =>{\r\n        setInitalFormData(prevdata => ({\r\n            ...prevdata,\r\n            [e.target.name]:e.target.value.trim()\r\n        }))\r\n\r\n    }\r\n    const handleSubmit =  (e) =>{\r\n        const {email, user_name, password}=FormData\r\n        props.onRegistration(email,user_name,password)\r\n        goToLogin()\r\n\r\n    }\r\n\r\n    async function goToLogin (){\r\n        await new Promise((resolve) => setTimeout(() => { \r\n            const refresh_token = localStorage.getItem('refresh_token') \r\n            if(props.success){\r\n                setInitalFormData({\r\n                    email:'',\r\n                    user_name:'',\r\n                    password:''\r\n                })\r\n                alert(\"You have successfully complete you're registration please try to login\")\r\n                history.push('/login')\r\n            }else if(props.error){\r\n                error='Invalid username or password, or maybe this email is allready exists'\r\n            }\r\n          \r\n        }, 2000))\r\n\r\n    }\r\n\r\n\r\n  return (\r\n      <Container maxWidth='sm' style={{marginTop:'30px'}}>\r\n    <React.Fragment>\r\n        {error && (<h2>{error}</h2>)}\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Registration\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={8} sm={10}>\r\n          <TextField\r\n          onChange={handleChange}\r\n            required\r\n            id=\"email\"\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            fullWidth\r\n            autoComplete=\"given-email\"\r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={8} sm={10}>\r\n          <TextField\r\n          onChange={handleChange}\r\n            required\r\n            id=\"usename\"\r\n            name=\"user_name\"\r\n            label=\"User_name\"\r\n            fullWidth\r\n            autoComplete=\"user name\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={8} sm={10}>\r\n          <TextField\r\n          onChange={handleChange}\r\n            id=\"password\"\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            fullWidth\r\n            autoComplete=\"Password\"\r\n          />\r\n        </Grid> \r\n        <Button onClick={handleSubmit} type=\"submit\" style={{marginTop:'10px'}} variant=\"contained\" color=\"primary\">\r\n        Registartion\r\n      </Button>\r\n      <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n            <NavLink to=\"/login\" variant=\"body2\">\r\n                Already have a account ? go to login\r\n              </NavLink>\r\n            </Grid>\r\n        </Grid>\r\n       \r\n      </Grid>\r\n    </React.Fragment>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    success:state.auth.registration,\r\n    error:state.auth.error\r\n})\r\n\r\nconst mapStateToDispatch = dispatch =>({\r\n    onRegistration : (email,user_name,password) => dispatch(UserRegistration(email,user_name,password))\r\n    \r\n})\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapStateToDispatch)(Registration)","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\admin\\UpdatePost.js",["127"],"import React,{useState, useEffect} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {useHistory, useParams } from 'react-router-dom';\r\nimport {UpdateData, RetriveData} from '../../store/actions/CRUD'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\n\r\nfunction UpdatePost(props) {\r\n    \r\n    const [openUpdate, setOpenUpdate] = React.useState(true);\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const {id} = useParams()\r\n    const post = useSelector(state => state.crud.singelPost)\r\n    const [newPost, setNewPost] = useState({\r\n        title:'',\r\n        excerpt:'', \r\n        content:'',  \r\n    })\r\n\r\n    console.log(post)\r\n    useEffect(() =>{\r\n        \r\n       dispatch(RetriveData(id))\r\n    \r\n    },[])\r\n\r\n    useEffect(() =>{\r\n        setNewPost({\r\n            title: post&& post.title,\r\n            excerpt: post && post.excerpt,\r\n            content: post && post.content\r\n        })\r\n    },[post])\r\n\r\n  \r\n    const [newImage, setNewImage] = useState({\r\n        oldImage:post ? post.image : null,\r\n        image:null\r\n        \r\n      })\r\n\r\n    const handleChange = (e) =>{\r\n        setNewPost(pervData =>({\r\n            ...pervData,\r\n            [e.target.name]:e.target.value,\r\n        }))\r\n    }\r\n    const HanldeOpenForm = () =>{\r\n      setOpenUpdate(!openUpdate)\r\n    }\r\n\r\n    const HandleCancle = () =>{\r\n        HanldeOpenForm()\r\n        history.push('/admin')\r\n\r\n    }\r\n\r\n    async function goToHome (){\r\n        await new Promise((resolve) => setTimeout(() => { \r\n            history.push('/retrive/'+ id)\r\n          \r\n        }, 1000))\r\n\r\n    }\r\n\r\n    const HandelCreaatePost = (e) =>{\r\n      const config = { headers: {'Content-Type':'multipart/form-data'}}\r\n      let formData = new FormData();\r\n      formData.append('title', newPost.title);\r\n      formData.append('Category', 1);\r\n      formData.append('author', 1);\r\n      formData.append('excerpt', newPost.excerpt);\r\n      formData.append('content', newPost.content);\r\n      if(newImage.image){\r\n        formData.append('image', newImage.image);\r\n        }\r\n\r\n      dispatch(UpdateData(formData, config, id))\r\n      HanldeOpenForm()\r\n      goToHome()\r\n\r\n\r\n\r\n    }  \r\n    \r\n    return (\r\n        <div>\r\n            {newPost ? \r\n            <Dialog open={openUpdate} onCloseUpdate={HanldeOpenForm} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Create New Post</DialogTitle>     <DialogContent>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    name='title'\r\n                    label=\"title\"\r\n                   \r\n                    value={newPost.title}\r\n                    onChange={e =>handleChange(e)}\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    name=\"excerpt\"\r\n                    label=\"excerpt\"\r\n                   \r\n                    value={newPost.excerpt}\r\n                    onChange={e =>handleChange(e)}\r\n                    fullWidth\r\n                  />\r\n                   <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"content\"\r\n                    name=\"content\"\r\n                    label=\"content\"\r\n                    multiline\r\n                    rows={2}\r\n                    rowsMax={4}\r\n                    value={newPost.content}\r\n                    onChange={e =>handleChange(e)}\r\n                    fullWidth\r\n                  />\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    id=\"post-image\"\r\n                    name=\"image\"\r\n                    type=\"file\"\r\n                    onChange={e => setNewImage({oldImage:e.target.files[0],image:e.target.files[0]})}\r\n                    /> \r\n                    \r\n                    <img style={{maxHeight:\"80px\", maxWidth:\"80px\"}} src={newImage.oldImage} alt=\"Italian Trulli\"></img>\r\n                   \r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={HandleCancle}   color=\"primary\">\r\n                    Cancel\r\n                  </Button>\r\n                  <Button onClick={HandelCreaatePost} type=\"submit\"  color=\"primary\">\r\n                    Subscribe\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n        \r\n            : ''}\r\n        \r\n     </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default UpdatePost;\r\n","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\admin\\deletePost.js",["128","129"],"F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\admin\\DeletePost.js",["130","131"],"import React,{useState, useEffect} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {useHistory, useParams } from 'react-router-dom';\r\nimport {DeleteData, RetriveData} from '../../store/actions/CRUD'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\n\r\nfunction DeletePost(props) {\r\n    \r\n    const [openDelete, setOpenDelete] = React.useState(true);\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const {id} = useParams()\r\n    const post = useSelector(state => state.crud.singelPost)\r\n    const [newPost, setNewPost] = useState({\r\n        title:'',\r\n      \r\n    })\r\n\r\n    console.log(post)\r\n    useEffect(() =>{\r\n        \r\n       dispatch(RetriveData(id))\r\n    \r\n    },[])\r\n\r\n    useEffect(() =>{\r\n        setNewPost({\r\n            title: post&& post.title,\r\n          \r\n        })\r\n    },[post])\r\n\r\n  \r\n    const HanldeOpenForm = () =>{\r\n        setOpenDelete(!openDelete)\r\n    }\r\n\r\n    const HandleCancle = () =>{\r\n        HanldeOpenForm()\r\n        history.push('/admin')\r\n\r\n    }\r\n    const HandelCreaatePost = (e) =>{\r\n      \r\n      dispatch(DeleteData(id))\r\n      HanldeOpenForm()\r\n      history.push('/admin')\r\n\r\n\r\n\r\n    }  \r\n    \r\n    return (\r\n        <div>\r\n            {newPost ? \r\n            <Dialog open={openDelete} onCloseUpdate={HanldeOpenForm} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Delete an article</DialogTitle> \r\n                <DialogContent>\r\n                \r\n                  <h3>Do you want to delete this post</h3>\r\n                  <h4>Title:<span>{newPost.title}</span></h4>\r\n                   \r\n                   \r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={HandleCancle}   color=\"primary\">\r\n                    Cancel\r\n                  </Button>\r\n                  <Button onClick={HandelCreaatePost} type=\"submit\"  color=\"primary\">\r\n                    Subscribe\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n        \r\n            : ''}\r\n        \r\n     </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DeletePost;\r\n","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\component\\searchitems\\SearchItems.js",["132","133","134"],"import React,{useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\nimport axios from 'axios'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 229,\r\n    minHeight:300,\r\n    maxHeight:300,\r\n    \r\n  },\r\n  media: {\r\n    height: 120,\r\n  },\r\n});\r\n\r\nfunction SearchItems(props) {  \r\n  const classes = useStyles();\r\n  const search = 'search'\r\n  const [appState, setAppState] = useState({\r\n      post: []\r\n  })\r\n\r\n  useEffect(() => {\r\n      axios.get(`http://127.0.0.1:8000/api/search/${window.location.search}`)\r\n      .then((res)=>{\r\n          setAppState({post:res.data})\r\n         \r\n      })\r\n      \r\n  }, [setAppState])\r\n\r\n  console.log(appState.post, 'search')\r\n\r\n  let posts=null\r\n\r\n    if(appState.post){\r\n        posts =appState.post.map((data)=>(\r\n       \r\n            <div key={data.id} style={{float:'left', marginRight:'10px', marginBottom:'10px'}}>\r\n              <Link \r\n               component={NavLink}\r\n               underline=\"none\" \r\n               to={'/retrive/'+data.id} \r\n              \r\n              >\r\n            <Card className={classes.root}>\r\n            <CardActionArea>\r\n                {data.image ? \r\n                <CardMedia\r\n                className={classes.media}\r\n                image={data.image}\r\n              />\r\n            \r\n                : \r\n           <CardMedia\r\n             className={classes.media}\r\n             image=\"https://post.greatist.com/wp-content/uploads/sites/3/2020/02/325466_1100-1100x628.jpg\"\r\n             title=\"Contemplative Reptile\"\r\n           />\r\n                }\r\n           <CardContent>\r\n             <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n               {data.title.substr(0,20)}...\r\n             </Typography>\r\n             <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n               {data.content.substr(0,60)}..\r\n             </Typography>\r\n           </CardContent>\r\n         </CardActionArea>\r\n         <CardActions>\r\n           <Button size=\"small\" color=\"primary\">\r\n             Learn More\r\n           </Button>\r\n         </CardActions>\r\n       </Card>\r\n       </Link>\r\n       </div>\r\n       \r\n    )\r\n )\r\n\r\n    }\r\n    \r\n      \r\n\r\n  return (\r\n     <div>\r\n         <Container maxWidth='s'>\r\n            {posts}\r\n         </Container>\r\n         \r\n     </div>\r\n\r\n  );\r\n}\r\nexport default SearchItems;","F:\\django-projects\\DRF-React\\blogapiwithredux\\src\\PrivateRoute.js",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":10,"column":41,"nodeType":"141","messageId":"142","endLine":10,"endColumn":47},{"ruleId":"139","severity":1,"message":"143","line":15,"column":9,"nodeType":"141","messageId":"142","endLine":15,"endColumn":14},{"ruleId":"139","severity":1,"message":"144","line":16,"column":12,"nodeType":"141","messageId":"142","endLine":16,"endColumn":16},{"ruleId":"139","severity":1,"message":"145","line":1,"column":15,"nodeType":"141","messageId":"142","endLine":1,"endColumn":23},{"ruleId":"146","severity":1,"message":"147","line":10,"column":7,"nodeType":"148","endLine":10,"endColumn":9,"suggestions":"149"},{"ruleId":"139","severity":1,"message":"150","line":1,"column":8,"nodeType":"141","messageId":"142","endLine":1,"endColumn":13},{"ruleId":"139","severity":1,"message":"150","line":1,"column":8,"nodeType":"141","messageId":"142","endLine":1,"endColumn":13},{"ruleId":"139","severity":1,"message":"145","line":1,"column":15,"nodeType":"141","messageId":"142","endLine":1,"endColumn":23},{"ruleId":"139","severity":1,"message":"151","line":21,"column":9,"nodeType":"141","messageId":"142","endLine":21,"endColumn":19},{"ruleId":"139","severity":1,"message":"152","line":21,"column":32,"nodeType":"141","messageId":"142","endLine":21,"endColumn":42},{"ruleId":"139","severity":1,"message":"153","line":36,"column":10,"nodeType":"141","messageId":"142","endLine":36,"endColumn":14},{"ruleId":"139","severity":1,"message":"154","line":36,"column":16,"nodeType":"141","messageId":"142","endLine":36,"endColumn":23},{"ruleId":"146","severity":1,"message":"147","line":45,"column":6,"nodeType":"148","endLine":45,"endColumn":8,"suggestions":"155"},{"ruleId":"139","severity":1,"message":"156","line":51,"column":11,"nodeType":"141","messageId":"142","endLine":51,"endColumn":27},{"ruleId":"139","severity":1,"message":"157","line":1,"column":25,"nodeType":"141","messageId":"142","endLine":1,"endColumn":34},{"ruleId":"139","severity":1,"message":"158","line":15,"column":12,"nodeType":"141","messageId":"142","endLine":15,"endColumn":16},{"ruleId":"139","severity":1,"message":"159","line":15,"column":18,"nodeType":"141","messageId":"142","endLine":15,"endColumn":25},{"ruleId":"139","severity":1,"message":"145","line":1,"column":27,"nodeType":"141","messageId":"142","endLine":1,"endColumn":35},{"ruleId":"146","severity":1,"message":"160","line":17,"column":3,"nodeType":"148","endLine":17,"endColumn":5,"suggestions":"161"},{"ruleId":"139","severity":1,"message":"162","line":16,"column":10,"nodeType":"141","messageId":"142","endLine":16,"endColumn":19},{"ruleId":"139","severity":1,"message":"163","line":51,"column":9,"nodeType":"141","messageId":"142","endLine":51,"endColumn":32},{"ruleId":"139","severity":1,"message":"150","line":1,"column":8,"nodeType":"141","messageId":"142","endLine":1,"endColumn":13},{"ruleId":"164","severity":1,"message":"165","line":22,"column":44,"nodeType":"166","messageId":"167","endLine":22,"endColumn":45},{"ruleId":"139","severity":1,"message":"150","line":1,"column":8,"nodeType":"141","messageId":"142","endLine":1,"endColumn":13},{"ruleId":"139","severity":1,"message":"145","line":1,"column":16,"nodeType":"141","messageId":"142","endLine":1,"endColumn":24},{"ruleId":"139","severity":1,"message":"168","line":8,"column":8,"nodeType":"141","messageId":"142","endLine":8,"endColumn":12},{"ruleId":"139","severity":1,"message":"169","line":39,"column":19,"nodeType":"141","messageId":"142","endLine":39,"endColumn":32},{"ruleId":"146","severity":1,"message":"170","line":31,"column":7,"nodeType":"148","endLine":31,"endColumn":9,"suggestions":"171"},{"ruleId":"139","severity":1,"message":"172","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":17},{"ruleId":"146","severity":1,"message":"170","line":30,"column":7,"nodeType":"148","endLine":30,"endColumn":9,"suggestions":"173"},{"ruleId":"139","severity":1,"message":"172","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":17},{"ruleId":"146","severity":1,"message":"170","line":30,"column":7,"nodeType":"148","endLine":30,"endColumn":9,"suggestions":"174"},{"ruleId":"139","severity":1,"message":"175","line":14,"column":9,"nodeType":"141","messageId":"142","endLine":14,"endColumn":20},{"ruleId":"139","severity":1,"message":"176","line":14,"column":22,"nodeType":"141","messageId":"142","endLine":14,"endColumn":33},{"ruleId":"139","severity":1,"message":"177","line":30,"column":9,"nodeType":"141","messageId":"142","endLine":30,"endColumn":15},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'push' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["180"],"'React' is defined but never used.","'DeleteData' is defined but never used.","'UpdateData' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.",["181"],"'handleUpdateOpen' is assigned a value but never used.","'useEffect' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["182"],"'Copyright' is defined but never used.","'successFullRegistration' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Link' is defined but never used.","'refresh_token' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["183"],"'TextField' is defined but never used.",["184"],["185"],"'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'search' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"186","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"191","fix":"193"},{"desc":"191","fix":"194"},"Update the dependencies array to be: [props]",{"range":"195","text":"196"},{"range":"197","text":"196"},"Update the dependencies array to be: [id, props]",{"range":"198","text":"199"},"Update the dependencies array to be: [dispatch, id]",{"range":"200","text":"201"},{"range":"202","text":"201"},{"range":"203","text":"201"},[260,262],"[props]",[1401,1403],[402,404],"[id, props]",[1045,1047],"[dispatch, id]",[1008,1010],[1008,1010]]